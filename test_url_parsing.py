import logging
from basketball_parser import BasketballParser

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.DEBUG)

def test_url_parsing():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ URL –º–∞—Ç—á–µ–π"""
    parser = BasketballParser()
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ URL...")
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä
        parser.setup_driver()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        if not parser.load_page():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É")
            return
            
        # –ü–∞—Ä—Å–∏–º –º–∞—Ç—á–∏
        matches = parser.parse_matches()
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –º–∞—Ç—á–µ–π: {len(matches)}")
        
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –º–∞—Ç—á–µ
        for i, match in enumerate(matches, 1):
            print(f"\n--- –ú–∞—Ç—á #{i} ---")
            print(f"–ö–æ–º–∞–Ω–¥—ã: {match['teams']}")
            print(f"–¢—É—Ä–Ω–∏—Ä: {match['tournament']}")
            print(f"URL: {match.get('match_url', '–ù–ï–¢ URL')}")
            print(f"–°—Ç–∞—Ç—É—Å: {match.get('match_status', 'unknown')}")
            print(f"–°—á–µ—Ç: {match['score']}")
            print(f"–¢–æ—Ç–∞–ª: {match['total']}")
            
        print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –º–∞—Ç—á–µ–π: {len(matches)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
    finally:
        parser.close_driver()

if __name__ == "__main__":
    test_url_parsing()